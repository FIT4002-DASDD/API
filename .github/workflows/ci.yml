name: FIT4002 DASDD API CI

on: [push, pull_request, workflow_dispatch]

jobs:
  test_API:
    name: Test API side functionalities
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    services:
      postgres:
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
      - name: Test using Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "12"
      - run: touch .test.env
      - run: |
        echo "PORT=5000
        DB_HOST="localhost"
        DB_PORT="5432"
        DB_NAME="postgres"
        DB_USERNAME="postgres"
        DB_PASSWORD="postgres"
        DB_SYNC=true
        DB_LOGS=false
        NODE_ENV=test
        CLIENT_ORIGIN=http://localhost:3000
        " >> .test.env
      - run: yarn install
        working-directory: .
      - run: yarn test
        working-directory: .
    
  publish:
    name: Publish Images to Docker Hub
    needs:
      - test_API
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Push API Image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: imuh0001/fit4002-dasdd-api:latest


  deploy:
    name: Deploy to AWS Elastic Beanstalk
    needs:
      - test_API
      - publish
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Generate Deployment Package
        run: zip -r deploy.zip . -x '*.git*' '**/node_modules/*'
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v16
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: "DASDD"
          environment_name: "Dasdd-env"
          version_label: 1
          region: "ap-southeast-2"
          deployment_package: deploy.zip
          use_existing_version_if_available: true
